{"version":3,"names":["Animations","LayoutAnimationType","getProcessedConfig","handleExitingAnimation","handleLayoutTransition","setElementAnimation","areDOMRectsEqual","makeElementVisible","chooseConfig","animationType","props","config","ENTERING","entering","EXITING","exiting","LAYOUT","layout","checkUndefinedAnimationFail","initialAnimationName","isLayoutTransition","console","warn","chooseAction","animationConfig","element","transitionData","reversed","tryGetAnimationConfig","animationName","presetName","constructor","shouldFail","startWebLayoutAnimation","tryActivateLayoutTransition","snapshot","rect","getBoundingClientRect","translateX","x","translateY","y","scaleX","width","scaleY","height"],"sources":["animationsManager.ts"],"sourcesContent":["'use strict';\n\nimport type { AnimationConfig, AnimationNames, CustomConfig } from './config';\nimport { Animations } from './config';\nimport type {\n  AnimatedComponentProps,\n  LayoutAnimationStaticContext,\n} from '../../../createAnimatedComponent/commonTypes';\nimport { LayoutAnimationType } from '../animationBuilder/commonTypes';\nimport {\n  getProcessedConfig,\n  handleExitingAnimation,\n  handleLayoutTransition,\n  setElementAnimation,\n} from './componentUtils';\nimport { areDOMRectsEqual } from './domUtils';\nimport type { TransitionData } from './animationParser';\nimport { makeElementVisible } from './componentStyle';\n\nfunction chooseConfig<ComponentProps extends Record<string, unknown>>(\n  animationType: LayoutAnimationType,\n  props: Readonly<AnimatedComponentProps<ComponentProps>>\n) {\n  const config =\n    animationType === LayoutAnimationType.ENTERING\n      ? props.entering\n      : animationType === LayoutAnimationType.EXITING\n      ? props.exiting\n      : animationType === LayoutAnimationType.LAYOUT\n      ? props.layout\n      : null;\n\n  return config;\n}\n\nfunction checkUndefinedAnimationFail(\n  initialAnimationName: string,\n  isLayoutTransition: boolean\n) {\n  // This prevents crashes if we try to set animations that are not defined.\n  // We don't care about layout transitions since they're created dynamically\n  if (initialAnimationName in Animations || isLayoutTransition) {\n    return false;\n  }\n\n  console.warn(\n    \"[Reanimated] Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, withCallback, reducedMotion.\"\n  );\n\n  return true;\n}\n\nfunction chooseAction(\n  animationType: LayoutAnimationType,\n  animationConfig: AnimationConfig,\n  element: HTMLElement,\n  transitionData: TransitionData\n) {\n  switch (animationType) {\n    case LayoutAnimationType.ENTERING:\n      setElementAnimation(element, animationConfig);\n      break;\n    case LayoutAnimationType.LAYOUT:\n      transitionData.reversed = animationConfig.reversed;\n      handleLayoutTransition(element, animationConfig, transitionData);\n      break;\n    case LayoutAnimationType.EXITING:\n      handleExitingAnimation(element, animationConfig);\n      break;\n  }\n}\n\nfunction tryGetAnimationConfig<ComponentProps extends Record<string, unknown>>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  animationType: LayoutAnimationType\n) {\n  const config = chooseConfig(animationType, props);\n  if (!config) {\n    return null;\n  }\n\n  type ConstructorWithStaticContext = LayoutAnimationStaticContext &\n    typeof config.constructor;\n\n  const isLayoutTransition = animationType === LayoutAnimationType.LAYOUT;\n  const animationName =\n    typeof config === 'function'\n      ? config.presetName\n      : (config.constructor as ConstructorWithStaticContext).presetName;\n\n  const shouldFail = checkUndefinedAnimationFail(\n    animationName,\n    isLayoutTransition\n  );\n\n  if (shouldFail) {\n    return null;\n  }\n\n  const animationConfig = getProcessedConfig(\n    animationName,\n    animationType,\n    config as CustomConfig,\n    animationName as AnimationNames\n  );\n\n  return animationConfig;\n}\n\nexport function startWebLayoutAnimation<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: HTMLElement,\n  animationType: LayoutAnimationType,\n  transitionData?: TransitionData\n) {\n  const animationConfig = tryGetAnimationConfig(props, animationType);\n\n  if (animationConfig) {\n    chooseAction(\n      animationType,\n      animationConfig,\n      element,\n      transitionData as TransitionData\n    );\n  } else {\n    makeElementVisible(element, 0);\n  }\n}\n\nexport function tryActivateLayoutTransition<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: HTMLElement,\n  snapshot: DOMRect\n) {\n  if (!props.layout) {\n    return;\n  }\n\n  const rect = element.getBoundingClientRect();\n\n  if (areDOMRectsEqual(rect, snapshot)) {\n    return;\n  }\n\n  const transitionData: TransitionData = {\n    translateX: snapshot.x - rect.x,\n    translateY: snapshot.y - rect.y,\n    scaleX: snapshot.width / rect.width,\n    scaleY: snapshot.height / rect.height,\n    reversed: false, // This field is used only in `SequencedTransition`, so by default it will be false\n  };\n\n  startWebLayoutAnimation(\n    props,\n    element,\n    LayoutAnimationType.LAYOUT,\n    transitionData\n  );\n}\n"],"mappings":"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","ignoreList":[]}